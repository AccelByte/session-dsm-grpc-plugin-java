plugins {
	id 'application'
	id "io.github.lognet.grpc-spring-boot" version '5.1.5'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'org.springframework.boot' version '3.3.5'
}

group = 'net.accelbyte.session.sessiondsm'
version = '0.0.1'
sourceCompatibility = '17'
project.buildDir = 'target'

mainClassName = 'net.accelbyte.session.sessiondsm.Application'

repositories {
	mavenCentral()
}

dependencies {
	annotationProcessor 'org.projectlombok:lombok:1.18.24'
	implementation 'com.google.code.gson:gson:2.9.1'
	implementation 'io.micrometer:micrometer-registry-prometheus:1.9.5'
	implementation 'net.accelbyte.sdk:sdk:0.69.0'
	implementation 'net.logstash.logback:logstash-logback-encoder:7.2'
	implementation 'org.projectlombok:lombok:1.18.24'
	implementation 'org.springframework.boot:spring-boot-starter:2.7.5'
	implementation 'org.springframework.boot:spring-boot-starter-web:2.7.5'
	implementation 'org.springframework.boot:spring-boot-starter-actuator:2.7.5'
	implementation 'com.google.api:gax:2.59.1'
	implementation 'com.google.cloud:google-cloud-compute:1.66.0'
	implementation 'com.amazonaws:aws-java-sdk:1.11.434'
	implementation 'com.amazonaws:aws-java-sdk-gamelift:1.12.422'

	implementation 'io.grpc:grpc-core:1.58.0'
	implementation 'io.grpc:grpc-api:1.58.0'
	implementation 'io.grpc:grpc-context:1.58.0'
	implementation 'io.grpc:grpc-protobuf:1.58.0'
	implementation 'io.grpc:grpc-stub:1.58.0'
	implementation 'io.grpc:grpc-netty-shaded:1.58.0'

	testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'
	testImplementation 'org.springframework.boot:spring-boot-starter-test:2.7.5'
}

bootJar {
	destinationDirectory = file(project.buildDir)
}

bootRun {
	if ( project.hasProperty('jvmArgs') ) {
		jvmArgs = (project.jvmArgs.split("\\s+") as List)
	} else {
		jvmArgs = ['-javaagent:jars/aws-opentelemetry-agent.jar',
				   '-Dotel.service.name=CustomSessionDsmServiceJavaServerDocker',
				   '-Dotel.propagators=b3multi',
				   '-Dotel.metrics.exporter=none',
				   '-Dotel.traces.exporter=zipkin',
				   '-Dspring.profiles.active=local'
		]
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
